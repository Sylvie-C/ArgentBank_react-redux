swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  
  /user/transactions/checking: 
    get: 
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Checking account transactions
      description: Returns an array of checking account transactions
      responses:
        '200':
          description: Checking account transactions returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      example: "29/05/2024"
                    description:
                      type: string
                      example: "My favourite supermarket"
                    amount: 
                      type: number
                      format: double
                      example: 200.00
                    balance: 
                      type: number
                      format: double
                      example: 1000.00
                    type: 
                      type: string
                      example: "electronic"
                    category:
                      type: string
                      example: "home"
                    note: 
                      type: string
                      example: "my last purchase at supermarket"
        '500':
          description: Internal Server Error

  /user/transactions/checking/{transaction_id}: 
    patch: 
      summary: Checking account transaction details
      description: Enables user to Create or Update details of one transaction ("Category" , "Note")
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: id of transaction to be updated
          schema:
            type: integer
            format: int64
            example: 1
      tags: 
        - Transactions Module
      responses: 
        '200':
          description: Transaction details modified successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    category:
                      type: string
                      example: "tech"
                    note: 
                      type: string
                      example: "New awesome mobile phone"
        '500': 
          description: "Internal Server Error"

    delete:
     summary: Delete a Checking account details depending on Transaction ID
     security:
       - BearerAuth: []
     parameters:
       - name: id
         in: path
         required: true
         description: id of transaction to be deleted
         schema:
           type: integer
           format: int64
           example: 1
     responses:
       '200':
         description: Item Deleted successfully
       '401':
         description: Unauthorized
       '500':
         description: Unexpected Behaviour


  /user/transactions/savings:
    get: 
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Savings account transactions
      description: Returns an array of savings account transactions
      responses:
        '200':
          description: Savings account transactions returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      example: "29/05/2024"
                    description:
                      type: string
                      example: "Savings from my checking account"
                    amount: 
                      type: number
                      format: double
                      example: 200.00
                    balance: 
                      type: number
                      format: double
                      example: 1000.00
                    type: 
                      type: string
                      example: "electronic"
                    category:
                      type: string
                      example: "accounts transfer"
                    note: 
                      type: string
                      example: "my last saving transaction"
        '500':
          description: Internal Server Error

  /user/transactions/savings/{transaction_id}: 
    patch: 
      summary: Savings account transaction details
      description: Enables user to Create or Update details of one transaction ("Category" , "Note")
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: id of transaction to be updated
          schema:
            type: integer
            format: int64
            example: 1
      tags: 
        - Transactions Module
      responses: 
        '200':
          description: Transaction details modified successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    category:
                      type: string
                      example: "tech"
                    note: 
                      type: string
                      example: "New awesome mobile phone"
        '500': 
          description: "Internal Server Error"

    delete:
     summary: Delete a Savings account details depending on Transaction ID
     security:
       - BearerAuth: []
     parameters:
       - name: id
         in: path
         required: true
         description: id of Transaction to be deleted
         schema:
           type: integer
           format: int64
           example: 1
     responses:
       '200':
         description: Item Deleted successfully
       '401':
         description: Unauthorized
       '500':
         description: Unexpected Behaviour


  /user/transactions/creditcard:
    get: 
      security:
        - Bearer: []  
      tags:
        - Transactions Module
      summary: Credit card account transactions
      description: Returns an array of credit card account transactions
      responses:
        '200':
          description: Credit card account transactions returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      example: "29/05/2024"
                    description:
                      type: string
                      example: "My favourite supermarket"
                    amount: 
                      type: number
                      format: double
                      example: 200.00
                    balance: 
                      type: number
                      format: double
                      example: 1000.00
                    type: 
                      type: string
                      example: "electronic"
                    category:
                      type: string
                      example: "home"
                    note: 
                      type: string
                      example: "my last purchase at supermarket"
        '500':
          description: Internal Server Error

  /user/transactions/creditcard/{transaction_id}: 
    patch: 
      summary: Credit card account transaction details
      description: Enables user to Create or Update details of one transaction ("Category" , "Note")
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: id of transaction to be updated
          schema:
            type: integer
            format: int64
            example: 1
      tags: 
        - Transactions Module
      responses: 
        '200':
          description: Transaction details modified successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    category:
                      type: string
                      example: "tech"
                    note: 
                      type: string
                      example: "New awesome mobile phone"
        '500': 
          description: "Internal Server Error"

    delete:
     summary: Delete a Credit Card account details depending on Transaction ID
     security:
       - BearerAuth: []
     parameters:
       - name: id
         in: path
         required: true
         description: id of transaction to be deleted
         schema:
           type: integer
           format: int64
           example: 1
     responses:
       '200':
         description: Item Deleted successfully
       '401':
         description: Unauthorized
       '500':
         description: Unexpected Behaviour

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer


securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header


definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction: 
    type: object
    properties:
      id:
        type: string
        readOnly: true
      date:
        type: string
        format: date
        readOnly: true
      amount:
        type: number
        readOnly: true
      balance:
        type: number
        readOnly: true
      type: 
        type: string
        readOnly: true
      category:
        type: string
        description: Entry field for transaction category (food, tech, ... )
      note:
        type: string
        description: Entry field for user personal note. 